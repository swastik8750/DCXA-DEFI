{"ast":null,"code":"var _jsxFileName = \"G:\\\\MyProfile\\\\FUTURE_TRACK\\\\autonity-uniswap-interface\\\\src\\\\Liquidity\\\\RemoveLiquidity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useSnackbar } from \"notistack\";\nimport { getAccount, getFactory, getProvider, getRouter, getSigner, getBalanceAndSymbol, getWeth, getReserves, getNetwork } from \"../ethereumFunctions\";\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\nimport { RemoveLiquidityField1, RemoveLiquidityField2 } from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\nimport COINS from \"../constants/coins\";\nimport * as chains from \"../constants/chains\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  values: {\n    width: \"50%\"\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1)\n  },\n  hr: {\n    width: \"100%\"\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\"\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4)\n  }\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityRemover(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // Stores information for the Autonity Network\n\n  const [provider, setProvider] = React.useState(getProvider());\n  const [signer, setSigner] = React.useState(getSigner(provider)); // The following are populated in a react hook\n\n  const [account, setAccount] = React.useState(undefined);\n  const [chainId, setChainId] = React.useState(undefined);\n  const [router, setRouter] = React.useState(undefined);\n  const [weth, setWeth] = React.useState(undefined);\n  const [factory, setFactory] = React.useState(undefined); // Stores a record of whether their respective dialog window is open\n\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false); // Stores data about their respective coin\n\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined\n  });\n  const [coins, setCoins] = React.useState([]); // Stores the current reserves in the liquidity pool between coin1 and coin2\n\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]); // Stores the current value of their respective text box\n\n  const [field1Value, setField1Value] = React.useState(\"\"); // Controls the loading button\n\n  const [loading, setLoading] = React.useState(false); // Stores the liquidity tokens balance of the user\n\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\"); // Stores the input and output for the liquidity removal preview\n\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]); // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setReserves(reserves.reverse());\n  }; // These functions take an HTML event, pull the data out and puts it into a state variable.\n\n\n  const handleChange = {\n    field1: e => {\n      setField1Value(e.target.value);\n    }\n  }; // Turns the account's balance into something nice and readable\n\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol) return parseFloat(balance).toPrecision(8) + \" \" + symbol;else return \"0.0\";\n  }; // Turns the coin's reserves into something nice and readable\n\n\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;else return \"0.0\";\n  }; // Determines whether the button should be enabled or not\n\n\n  const isButtonEnabled = () => {\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput = parseFloat(field1Value);\n    return coin1.address && coin2.address && parsedInput !== NaN && 0 < parsedInput && parsedInput <= liquidityTokens;\n  };\n\n  const remove = () => {\n    console.log(\"Attempting to remove liquidity...\");\n    setLoading(true);\n    removeLiquidity(coin1.address, coin2.address, field1Value, 0, 0, router, account, signer, factory).then(() => {\n      setLoading(false); // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n\n      setField1Value(\"\");\n      enqueueSnackbar(\"Removal Successful\", {\n        variant: \"success\"\n      });\n    }).catch(e => {\n      setLoading(false);\n      enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n        variant: \"error\",\n        autoHideDuration: 10000\n      });\n    });\n  }; // Called when the dialog window for coin1 exits\n\n\n  const onToken1Selected = address => {\n    // Close the dialog window\n    setDialog1Open(false); // If the user inputs the same token, we want to switch the data in the fields\n\n    if (address === coin2.address) {\n      switchFields();\n    } // We only update the values if the user provides a token\n    else if (address) {\n        // Getting some token data is async, so we need to wait for the data to return, hence the promise\n        getBalanceAndSymbol(account, address, provider, signer, weth.address, coins).then(data => {\n          setCoin1({\n            address: address,\n            symbol: data.symbol,\n            balance: data.balance\n          });\n        });\n      }\n  }; // Called when the dialog window for coin2 exits\n\n\n  const onToken2Selected = address => {\n    // Close the dialog window\n    setDialog2Open(false); // If the user inputs the same token, we want to switch the data in the fields\n\n    if (address === coin1.address) {\n      switchFields();\n    } // We only update the values if the user provides a token\n    else if (address) {\n        // Getting some token data is async, so we need to wait for the data to return, hence the promise\n        getBalanceAndSymbol(account, address, provider, signer, weth.address, coins).then(data => {\n          setCoin2({\n            address: address,\n            symbol: data.symbol,\n            balance: data.balance\n          });\n        });\n      }\n  }; // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n\n\n  useEffect(() => {\n    console.log(\"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address);\n\n    if (coin1.address && coin2.address && account) {\n      getReserves(coin1.address, coin2.address, factory, signer, account).then(data => {\n        setReserves([data[0], data[1]]);\n        setLiquidityTokens(data[2]);\n      });\n    }\n  }, [coin1.address, coin2.address, account, factory, signer]); // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity removal.\n\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity removal\");\n      quoteRemoveLiquidity(coin1.address, coin2.address, field1Value, factory, signer).then(data => {\n        setTokensOut(data);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, factory, signer]);\n  useEffect(() => {\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && account) {\n        getReserves(coin1.address, coin2.address, factory, signer, account).then(data => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(account, coin1.address, provider, signer, weth.address, coins).then(data => {\n          setCoin1({ ...coin1,\n            balance: data.balance\n          });\n        });\n      }\n\n      if (coin2.address && account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(account, coin2.address, provider, signer, weth.address, coins).then(data => {\n          setCoin2({ ...coin2,\n            balance: data.balance\n          });\n        });\n      }\n    }, 10000);\n    return () => clearTimeout(coinTimeout);\n  });\n  useEffect(() => {\n    getAccount().then(account => {\n      setAccount(account);\n    });\n\n    async function Network() {\n      const chainId = await getNetwork(provider).then(chainId => {\n        setChainId(chainId);\n        return chainId;\n      });\n\n      if (chains.networks.includes(chainId)) {\n        setwrongNetworkOpen(false);\n        console.log('chainID: ', chainId); // Get the router using the chainID\n\n        const router = await getRouter(chains.routerAddress.get(chainId), signer);\n        setRouter(router); // Get Weth address from router\n\n        await router.WETH().then(wethAddress => {\n          setWeth(getWeth(wethAddress, signer)); // Set the value of the weth address in the default coins array\n\n          const coins = COINS.get(chainId);\n          coins[0].address = wethAddress;\n          setCoins(coins);\n        }); // Get the factory address from the router\n\n        await router.factory().then(factory_address => {\n          setFactory(getFactory(factory_address, signer));\n        });\n      } else {\n        console.log('Wrong network mate.');\n        setwrongNetworkOpen(true);\n      }\n    }\n\n    Network();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: classes.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinDialog, {\n      open: dialog1Open,\n      onClose: onToken1Selected,\n      coins: coins,\n      signer: signer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinDialog, {\n      open: dialog2Open,\n      onClose: onToken2Selected,\n      coins: coins,\n      signer: signer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WrongNetwork, {\n      open: wrongNetworkOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.fullWidth,\n        children: /*#__PURE__*/_jsxDEV(RemoveLiquidityField1, {\n          activeField: true,\n          value: field1Value,\n          onClick: () => setDialog1Open(true),\n          onChange: handleChange.field1,\n          symbol: coin1.symbol !== undefined ? coin1.symbol : \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.fullWidth,\n        children: /*#__PURE__*/_jsxDEV(RemoveLiquidityField2, {\n          activeField: true,\n          onClick: () => setDialog2Open(true),\n          symbol: coin2.symbol !== undefined ? coin2.symbol : \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      spacing: 4,\n      className: classes.balance,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.hr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        className: classes.values,\n        direction: \"column\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Balances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatBalance(coin1.balance, coin1.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatBalance(coin2.balance, coin2.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Reserves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(reserves[0], coin1.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(reserves[1], coin2.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Liquidity Pool Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(liquidityTokens, \"UNI-V2\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paperContainer,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          spacing: 2,\n          className: classes.fullWidth,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Liquidity Pool Tokens in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(tokensOut[0], \"UNI-V2\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: classes.hr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Tokens Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(tokensOut[1], coin1.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(tokensOut[2], coin2.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.hr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n        loading: loading,\n        valid: isButtonEnabled(),\n        success: false,\n        fail: false,\n        onClick: remove,\n        children: [/*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n          className: classes.buttonIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), \"Remove\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LiquidityRemover, \"pnA0R8dCjsQeZZ+DfBV/L/EqVdQ=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = LiquidityRemover;\nexport default LiquidityRemover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiquidityRemover\");","map":{"version":3,"sources":["G:/MyProfile/FUTURE_TRACK/autonity-uniswap-interface/src/Liquidity/RemoveLiquidity.js"],"names":["React","useEffect","Grid","makeStyles","Paper","Typography","ArrowDownwardIcon","useSnackbar","getAccount","getFactory","getProvider","getRouter","getSigner","getBalanceAndSymbol","getWeth","getReserves","getNetwork","removeLiquidity","quoteRemoveLiquidity","RemoveLiquidityField1","RemoveLiquidityField2","CoinDialog","LoadingButton","WrongNetwork","COINS","chains","styles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","width","overflow","background","color","fullWidth","values","title","textAlign","marginBottom","hr","balance","buttonIcon","marginRight","useStyles","LiquidityRemover","props","classes","enqueueSnackbar","provider","setProvider","useState","signer","setSigner","account","setAccount","undefined","chainId","setChainId","router","setRouter","weth","setWeth","factory","setFactory","dialog1Open","setDialog1Open","dialog2Open","setDialog2Open","wrongNetworkOpen","setwrongNetworkOpen","coin1","setCoin1","address","symbol","coin2","setCoin2","coins","setCoins","reserves","setReserves","field1Value","setField1Value","loading","setLoading","liquidityTokens","setLiquidityTokens","tokensOut","setTokensOut","switchFields","reverse","handleChange","field1","e","target","value","formatBalance","parseFloat","toPrecision","formatReserve","reserve","isButtonEnabled","parsedInput","NaN","remove","console","log","then","variant","catch","message","autoHideDuration","onToken1Selected","data","onToken2Selected","coinTimeout","setTimeout","clearTimeout","Network","networks","includes","routerAddress","get","WETH","wethAddress","factory_address"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  getAccount,\r\n  getFactory,\r\n  getProvider,\r\n  getRouter,\r\n  getSigner,\r\n  getBalanceAndSymbol,\r\n  getWeth,\r\n  getReserves,\r\n  getNetwork\r\n} from \"../ethereumFunctions\";\r\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\r\nimport {\r\n  RemoveLiquidityField1,\r\n  RemoveLiquidityField2,\r\n} from \"../CoinSwapper/CoinField\";\r\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\nimport COINS from \"../constants/coins\";\r\nimport * as chains from \"../constants/chains\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    paddingBottom: theme.spacing(3),\r\n    width: \"40%\",\r\n    overflow: \"wrap\",\r\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\r\n    color: \"white\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  values: {\r\n    width: \"50%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n    padding: theme.spacing(0.4),\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction LiquidityRemover(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // Stores information for the Autonity Network\r\n  const [provider, setProvider] = React.useState(getProvider());\r\n  const [signer, setSigner] = React.useState(getSigner(provider));\r\n\r\n  // The following are populated in a react hook\r\n  const [account, setAccount] = React.useState(undefined);\r\n  const [chainId, setChainId] = React.useState(undefined);\r\n  const [router, setRouter] = React.useState(undefined);\r\n  const [weth, setWeth] = React.useState(undefined);\r\n  const [factory, setFactory] = React.useState(undefined);\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\r\n\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  const [coins, setCoins] = React.useState([]);\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Stores the liquidity tokens balance of the user\r\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\r\n\r\n  // Stores the input and output for the liquidity removal preview\r\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n\r\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\r\n    const parsedInput = parseFloat(field1Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      parsedInput !== NaN &&\r\n      0 < parsedInput &&\r\n      parsedInput <= liquidityTokens\r\n    );\r\n  };\r\n\r\n  const remove = () => {\r\n    console.log(\"Attempting to remove liquidity...\");\r\n    setLoading(true);\r\n\r\n    removeLiquidity(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      0,\r\n      0,\r\n      router,\r\n      account,\r\n      signer,\r\n      factory\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        enqueueSnackbar(\"Removal Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(account, address, provider, signer, weth.address, coins).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(account, address, provider, signer, weth.address, coins).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address && account) {\r\n      getReserves(coin1.address, coin2.address, factory, signer, account).then(\r\n        (data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        }\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, account, factory, signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\r\n  // It will give a preview of the liquidity removal.\r\n  useEffect(() => {\r\n    if (isButtonEnabled()) {\r\n      console.log(\"Trying to preview the liquidity removal\");\r\n      quoteRemoveLiquidity(\r\n        coin1.address,\r\n        coin2.address,\r\n        field1Value,\r\n        factory,\r\n        signer\r\n      ).then((data) => {\r\n        setTokensOut(data);\r\n      });\r\n    }\r\n  }, [coin1.address, coin2.address, field1Value, factory, signer]);\r\n\r\n  useEffect(() => {\r\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log(\"Checking balances & Getting reserves...\");\r\n\r\n      if (coin1.address && coin2.address && account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          factory,\r\n          signer,\r\n          account\r\n        ).then((data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        });\r\n      }\r\n\r\n      if (coin1.address && account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(account, coin1.address, provider, signer, weth.address, coins).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(account, coin2.address, provider, signer, weth.address, coins).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n  useEffect(() => {\r\n    \r\n    getAccount().then((account) => {\r\n      setAccount(account);\r\n    });\r\n\r\n    async function Network() {\r\n      const chainId = await getNetwork(provider).then((chainId) => {\r\n        setChainId(chainId);\r\n        return chainId;\r\n      });\r\n\r\n      if (chains.networks.includes(chainId)){\r\n        setwrongNetworkOpen(false);\r\n        console.log('chainID: ', chainId);\r\n        // Get the router using the chainID\r\n        const router = await getRouter (chains.routerAddress.get(chainId), signer)\r\n        setRouter(router);\r\n        // Get Weth address from router\r\n        await router.WETH().then((wethAddress) => {\r\n          setWeth(getWeth (wethAddress, signer));\r\n          // Set the value of the weth address in the default coins array\r\n          const coins = COINS.get(chainId);\r\n          coins[0].address = wethAddress;\r\n          setCoins(coins);\r\n        });\r\n        // Get the factory address from the router\r\n        await router.factory().then((factory_address) => {\r\n          setFactory(getFactory (factory_address, signer));\r\n        })\r\n      } else {\r\n        console.log('Wrong network mate.');\r\n        setwrongNetworkOpen(true);\r\n      }\r\n    }\r\n\r\n    Network()\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Coin Swapper */}\r\n      <Typography variant=\"h5\" className={classes.title}></Typography>\r\n\r\n      {/* Dialog Windows */}\r\n      <CoinDialog\r\n        open={dialog1Open}\r\n        onClose={onToken1Selected}\r\n        coins={coins}\r\n        signer={signer}\r\n      />\r\n      <CoinDialog\r\n        open={dialog2Open}\r\n        onClose={onToken2Selected}\r\n        coins={coins}\r\n        signer={signer}\r\n      />\r\n      <WrongNetwork\r\n        open={wrongNetworkOpen}\r\n      />\r\n\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <RemoveLiquidityField1\r\n            activeField={true}\r\n            value={field1Value}\r\n            onClick={() => setDialog1Open(true)}\r\n            onChange={handleChange.field1}\r\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <RemoveLiquidityField2\r\n            activeField={true}\r\n            onClick={() => setDialog2Open(true)}\r\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        spacing={4}\r\n        className={classes.balance}\r\n      >\r\n        <hr className={classes.hr} />\r\n        <Grid\r\n          container\r\n          item\r\n          className={classes.values}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          {/* Balance Display */}\r\n          <Typography variant=\"h6\">Your Balances</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin1.balance, coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin2.balance, coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Reserves Display */}\r\n          <Typography variant=\"h6\">Reserves</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[0], coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[1], coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Liquidity Tokens Display */}\r\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"center\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper className={classes.paperContainer}>\r\n          {/*Red  Display to show the quote */}\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={classes.fullWidth}\r\n          >\r\n            {/* Tokens in */}\r\n            <Typography variant=\"h6\">Liquidity Pool Tokens in</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"center\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(tokensOut[0], \"UNI-V2\")}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Liquidity Tokens Display */}\r\n            <Typography variant=\"h6\">Tokens Out</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(tokensOut[1], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(tokensOut[2], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <hr className={classes.hr} />\r\n      </Grid>\r\n\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <LoadingButton\r\n          loading={loading}\r\n          valid={isButtonEnabled()}\r\n          success={false}\r\n          fail={false}\r\n          onClick={remove}\r\n        >\r\n          <ArrowDownwardIcon className={classes.buttonIcon} />\r\n          Remove\r\n        </LoadingButton>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiquidityRemover;\r\n"]},"metadata":{},"sourceType":"module"}