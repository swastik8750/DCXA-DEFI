{"ast":null,"code":"import * as chains from './chains'; // If you add coins for a new network, make sure Weth address (for the router you are using) is the first entry\n\nconst AUTONITYCoins = [{\n  name: \"Auton\",\n  abbr: \"AUT\",\n  address: \"\" // Weth address is fetched from the router\n\n}, {\n  name: \"Token A\",\n  abbr: \"TA\",\n  address: \"0x1d29BD2ACedBff15A59e946a4DE26d5257447727\"\n}, {\n  name: \"Token B\",\n  abbr: \"TB\",\n  address: \"0xc108a13D00371520EbBeCc7DF5C8610C71F4FfbA\"\n}, {\n  name: \"Token C\",\n  abbr: \"TC\",\n  address: \"0xC8E25055A4666F39179abE06d466F5A98423863F\"\n}, {\n  name: \"Token D\",\n  abbr: \"TD\",\n  address: \"0x23238098F2B4dd9Ba3bb8bc78b639dD113da697e\"\n}];\nconst DEVNETCoins = [{\n  name: \"Auton\",\n  abbr: \"AUT\",\n  address: \"\" // Weth address is fetched from the router\n\n}, {\n  name: \"Newton\",\n  abbr: \"NEW\",\n  address: \"0xBd770416a3345F91E4B34576cb804a576fa48EB1\"\n}, {\n  name: \"Token A\",\n  abbr: \"TA\",\n  address: \"0xD5073808CbA7d24500aa8f659B339b87945958a6\"\n}, {\n  name: \"Token B\",\n  abbr: \"TB\",\n  address: \"0x908B8e60d149529d757F4aEd9320F246724f2b99\"\n}];\nconst MAINNETCoins = [{\n  name: \"Ether\",\n  abbr: \"ETH\",\n  address: \"\" // Weth address is fetched from the router\n\n}, {\n  name: \"Dai\",\n  abbr: \"DAI\",\n  address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n}, {\n  name: \"Tether USD\",\n  abbr: \"USDT\",\n  address: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\"\n}];\nconst ROPSTENCoins = [{\n  name: \"Ether\",\n  abbr: \"ETH\",\n  address: \"\" // Weth address is fetched from the router\n\n}, {\n  name: \"Dai\",\n  abbr: \"DAI\",\n  address: \"0xad6d458402f60fd3bd25163575031acdce07538d\"\n}, {\n  name: \"Tether USD\",\n  abbr: \"USDT\",\n  address: \"0x6ee856ae55b6e1a249f04cd3b947141bc146273c\"\n}];\nconst KOVANCoins = [{\n  name: \"Ether\",\n  abbr: \"ETH\",\n  address: \"\" // // Weth address is fetched from the router\n\n}, {\n  name: \"Dai\",\n  abbr: \"DAI\",\n  address: \"0xc4375b7de8af5a38a93548eb8453a498222c4ff2\"\n}, {\n  name: \"Tether USD\",\n  abbr: \"USDT\",\n  address: \"0xf3e0d7bf58c5d455d31ef1c2d5375904df525105\"\n}];\nconst RINKEBYCoins = [{\n  name: \"Ether\",\n  abbr: \"ETH\",\n  address: \"\" // Weth address is fetched from the router\n\n}, {\n  name: \"Dai\",\n  abbr: \"DAI\",\n  address: \"0x95b58a6bff3d14b7db2f5cb5f0ad413dc2940658\"\n}, {\n  name: \"Tether USD\",\n  abbr: \"USDT\",\n  address: \"0x3b00ef435fa4fcff5c209a37d1f3dcff37c705ad\"\n}];\nconst GÖRLICoins = [{\n  name: \"Ether\",\n  abbr: \"ETH\",\n  address: \"\" // Weth address is fetched from the router\n\n}, {\n  name: \"Dai\",\n  abbr: \"DAI\",\n  address: \"0x73967c6a0904aa032c103b4104747e88c566b1a2\"\n}, {\n  name: \"Tether USD\",\n  abbr: \"USDT\",\n  address: \"0x509ee0d083ddf8ac028f2a56731412edd63223b9\"\n}];\nconst COINS = new Map();\nCOINS.set(chains.ChainId.MAINNET, MAINNETCoins);\nCOINS.set(chains.ChainId.ROPSTEN, ROPSTENCoins);\nCOINS.set(chains.ChainId.RINKEBY, RINKEBYCoins);\nCOINS.set(chains.ChainId.GÖRLI, GÖRLICoins);\nCOINS.set(chains.ChainId.KOVAN, KOVANCoins);\nCOINS.set(chains.ChainId.AUTONITY, AUTONITYCoins);\nCOINS.set(chains.ChainId.DEVNET, DEVNETCoins);\nexport default COINS;","map":{"version":3,"sources":["G:/MyProfile/FUTURE_TRACK/DCXA-DEFI/src/constants/coins.js"],"names":["chains","AUTONITYCoins","name","abbr","address","DEVNETCoins","MAINNETCoins","ROPSTENCoins","KOVANCoins","RINKEBYCoins","GÖRLICoins","COINS","Map","set","ChainId","MAINNET","ROPSTEN","RINKEBY","GÖRLI","KOVAN","AUTONITY","DEVNET"],"mappings":"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","sourcesContent":["import * as chains from './chains';\r\n\r\n// If you add coins for a new network, make sure Weth address (for the router you are using) is the first entry\r\n\r\nconst AUTONITYCoins = [\r\n  {\r\n    name: \"Auton\",\r\n    abbr: \"AUT\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Token A\",\r\n    abbr: \"TA\",\r\n    address: \"0x1d29BD2ACedBff15A59e946a4DE26d5257447727\",\r\n  },\r\n  {\r\n    name: \"Token B\",\r\n    abbr: \"TB\",\r\n    address: \"0xc108a13D00371520EbBeCc7DF5C8610C71F4FfbA\",\r\n  },\r\n  {\r\n    name: \"Token C\",\r\n    abbr: \"TC\",\r\n    address: \"0xC8E25055A4666F39179abE06d466F5A98423863F\",\r\n  },\r\n  {\r\n    name: \"Token D\",\r\n    abbr: \"TD\",\r\n    address: \"0x23238098F2B4dd9Ba3bb8bc78b639dD113da697e\",\r\n  }\r\n]\r\n\r\nconst DEVNETCoins = [\r\n  {\r\n    name: \"Auton\",\r\n    abbr: \"AUT\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Newton\",\r\n    abbr: \"NEW\",\r\n    address: \"0xBd770416a3345F91E4B34576cb804a576fa48EB1\",\r\n  },\r\n  {\r\n    name: \"Token A\",\r\n    abbr: \"TA\",\r\n    address: \"0xD5073808CbA7d24500aa8f659B339b87945958a6\",\r\n  },\r\n  {\r\n    name: \"Token B\",\r\n    abbr: \"TB\",\r\n    address: \"0x908B8e60d149529d757F4aEd9320F246724f2b99\",\r\n  }\r\n]\r\n\r\nconst MAINNETCoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\r\n  },\r\n]\r\n\r\nconst ROPSTENCoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0xad6d458402f60fd3bd25163575031acdce07538d\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0x6ee856ae55b6e1a249f04cd3b947141bc146273c\",\r\n  },\r\n]\r\n\r\nconst KOVANCoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0xc4375b7de8af5a38a93548eb8453a498222c4ff2\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0xf3e0d7bf58c5d455d31ef1c2d5375904df525105\",\r\n  },\r\n]\r\n\r\nconst RINKEBYCoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0x95b58a6bff3d14b7db2f5cb5f0ad413dc2940658\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0x3b00ef435fa4fcff5c209a37d1f3dcff37c705ad\",\r\n  },\r\n]\r\n\r\nconst GÖRLICoins = [\r\n  {\r\n    name: \"Ether\",\r\n    abbr: \"ETH\",\r\n    address: \"\", // Weth address is fetched from the router\r\n  },\r\n  {\r\n    name: \"Dai\",\r\n    abbr: \"DAI\",\r\n    address: \"0x73967c6a0904aa032c103b4104747e88c566b1a2\",\r\n  },\r\n  {\r\n    name: \"Tether USD\",\r\n    abbr: \"USDT\",\r\n    address: \"0x509ee0d083ddf8ac028f2a56731412edd63223b9\",\r\n  },\r\n]\r\n\r\nconst COINS = new Map();\r\nCOINS.set(chains.ChainId.MAINNET, MAINNETCoins);\r\nCOINS.set(chains.ChainId.ROPSTEN, ROPSTENCoins);\r\nCOINS.set(chains.ChainId.RINKEBY, RINKEBYCoins);\r\nCOINS.set(chains.ChainId.GÖRLI, GÖRLICoins);\r\nCOINS.set(chains.ChainId.KOVAN, KOVANCoins);\r\nCOINS.set(chains.ChainId.AUTONITY, AUTONITYCoins);\r\nCOINS.set(chains.ChainId.DEVNET, DEVNETCoins);\r\nexport default COINS"]},"metadata":{},"sourceType":"module"}